From 48a253a342427326ff2a4ed999bc00faa983d32c Mon Sep 17 00:00:00 2001
From: lu gao <lu.gao@lynxi.com>
Date: Thu, 2 Jun 2022 19:09:39 +0800
Subject: [PATCH] torch yolox-s lyncompile

---
 lyncompile.py | 35 +++++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)
 create mode 100755 lyncompile.py

diff --git a/lyncompile.py b/lyncompile.py
new file mode 100755
index 0000000..45c7576
--- /dev/null
+++ b/lyncompile.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python3
+# -*- coding: utf-8 -*-
+import argparse
+import lyngor as lyn
+from yolox.exp import get_exp
+import torch
+import torch.nn as nn
+
+def make_parser():
+    parser = argparse.ArgumentParser("YOLOX-s compile parser")
+
+    parser.add_argument("-m", "--model_path", type=str, default="../yolox_s.pth", help="model path")
+    parser.add_argument("-o", "--output_path", type=str, default="../convert_out", help="model output path")
+    parser.add_argument("-i", "--input_shape", type=str, default="1, 3, 640, 640", help="model input shape")
+    parser.add_argument("-n", "--model_name", type=str, default="yolox-s", help="model name")
+    
+    return parser
+
+if __name__ == "__main__":
+ 
+    args = make_parser().parse_args()
+
+    exp = get_exp(exp_name=args.model_name)
+    model = exp.get_model()
+    model.eval()
+    ckpt = torch.load(args.model_path, map_location="cpu")
+    model.load_state_dict(ckpt["model"])
+    model.head.decode_in_inference = False
+
+    dlmodel = lyn.DLModel()
+    input_shape = tuple(map(int, args.input_shape.split(",")))
+    dlmodel.load(model, model_type='Pytorch',
+                inputs_dict={'images': input_shape})
+    builder = lyn.Builder(target='apu', is_map=True)
+    builder.build(dlmodel.graph, dlmodel.params, out_path=args.output_path)
\ No newline at end of file
-- 
2.7.4

